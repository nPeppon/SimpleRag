{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"metadata": {"source": "https://lilianweng.github.io/posts/2024-02-05-human-data-quality/", "title": "Thinking about High-Quality Human Data | Lil'Log", "description": "[Special thank you to Ian Kivlichan for many useful pointers (E.g. the 100+ year old Nature paper \u201cVox populi\u201d) and nice feedback. \ud83d\ude4f ]\nHigh-quality data is the fuel for modern data deep learning model training. Most of the task-specific labeled data comes from human annotation, such as classification task or RLHF labeling (which can be constructed as classification format) for LLM alignment training. Lots of ML techniques in the post can help with data quality, but fundamentally human data collection involves attention to details and careful execution.", "language": "en", "source_url": "https://lilianweng.github.io/posts/2024-02-05-human-data-quality/", "type": "chunk", "doc_id": "e45acbe0-e091-454d-8e34-4195522b80c1", "original_doc_id": "5919f85a-dbf0-4b88-a76e-25d84dc4ae48"}, "page_content": "Thinking about High-Quality Human Data | Lil'Log\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLil'Log\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPosts\n\n\n\n\nArchive\n\n\n\n\nSearch\n\n\n\n\nTags\n\n\n\n\nFAQ\n\n\n\n\nemojisearch.app\n\n\n\n\n\n\n\n\n\n      Thinking about High-Quality Human Data\n    \nDate: February 5, 2024  |  Estimated Reading Time: 21 min  |  Author: Lilian Weng\n\n\n \n\n\nTable of Contents\n\n\n\nHuman Raters \u2194 Data Quality\n\nThe Wisdom of the Crowd\n\nRater Agreement\n\nRater Disagreement & Two Paradigms\n\n\nData Quality \u2194 Model Training\n\nInfluence Functions\n\nPrediction Changes during Training\n\nNoisy Cross-Validation\n\n\nCitation\n\nReferences\n\n\n\n\n\n[Special thank you to Ian Kivlichan for many useful pointers (E.g. the 100+ year old Nature paper \u201cVox populi\u201d) and nice feedback. \ud83d\ude4f ]\nHigh-quality data is the fuel for modern data deep learning model training. Most of the task-specific labeled data comes from human annotation, such as classification task or RLHF labeling (which can be constructed as classification format) for LLM alignment training. Lots of ML techniques in the post can help with data quality, but fundamentally human data collection involves attention to details and careful execution. The community knows the value of high quality data, but somehow we have this subtle impression that \u201cEveryone wants to do the model work, not the data work\u201d (Sambasivan et al. 2021).\n\nFig. 1. Two directions to approach high data quality.\nHuman Raters \u2194 Data Quality#\nCollecting human data involve a set of operation steps and every step contributes to the data quality:\n\nTask design: Design task workflow to improve clarity and reduce complexity. Detailed guidelines are helpful but very long and complicated guidelines demand a decent amount of training to be useful.\nSelect and train a pool of raters: Select annotators with matched skillset and consistency. Training sessions are necessary. After onboarding, regular feedback and calibration sessions are also needed.\nCollect and aggregate data. This is the stage where more ML techniques can be applied to clean, filter and smartly aggregate data to identify the true labels.\n\n\nFig. 2. Quality assurance refers to a set of actions that allow one to improve quality by acting on the quality attributes identified in the quality model. (Image source: Daniel et al. 2018)\nThe Wisdom of the Crowd#\nVox populi (originally \u201cVox populi, vox Dei\u201d), a Latin phrase, means the voice of people. A short paper named was the same name was published in 1907 on Nature. It tracked an event at an annual exhibition where a fat ox was selected and people would guess the weight of the ox in order to win a prize if the guess is close to the real number. The middlemost estimate was treated as \u201cthe vox populi\u201d and ended up being very close to the true value. The author concluded \u201cThis result is, I think, more creditable to the trustworthiness of a democratic judgment than might have been expected.\u201d This is probably the earliest mention of how crowdsourcing (\u201cthe wisdom of the crowd\u201d) would work out.\nAlmost 100 years later, Callison-Burch (2009) did an early study on using Amazon Mechanical Turk (AMT) to run non-expert human evaluation on Machine Translation (MT) tasks and even to rely on non-experts to create new gold reference translations. The setup for human evaluation was simple: Each turker is shown a source sentence, a reference translation, and 5 translations from 5 MT systems. They are asked to rank 5 translations from best to worst. Each task is completed by 5 turkers.\nUnsurprisingly, there are spammers producing low quality annotation to only optimize the volume. So when measuring the agreement between experts and non-experts, different weighting schemes need to be applied to downweight the contribution of spammers: (1) \u201cweighted by experts\u201d: using agreement rate with experts on a gold set of 10 examples; (2) \u201cweighted by non-experts\u201d: relying on agreement rate with the rest of turkers on the whole dataset.\nIn a harder task, non-expert human annotators were asked to create new gold reference translations. Callison-Burch designed the task in two stages, where the first stage created new translations with reference to MT outputs and the second one filtered translations that may seem to be gerated by a MT system. The correlation between experts\u2019 and crowdsourced translations is higher than that between expert and MT system outputs.\n\nFig. 3. (Left) The agreement rate is measured by comparing each pair of translation sentences (\"A > B\", \"A=B\", \"A < B\") and thus chance agreement is 1/3. The upper bound is set by the expert-expert agreement rate. (Right) Comparison of BLEU score between translations from different sources. LCD (Linguistic Data Consortium) translators provide expert translations. (Image source: Callison-Burch 2009)\nRater Agreement#\nWe often think of annotation as targeting a single ground truth and try to evaluate quality against one gold answer with consistent standards. A common practice for finding reliable ground truth labels is to collect multiple labels from multiple raters. Assuming that each rater performs at a different level of quality, we can use a weighted average of annotations but weighted by a proficiency score. This score is often approximated by how often one rater agrees with others.\nMajority Voting: Taking the majority vote is the simplest way of aggregation, equivalent to taking the mode of a set of labels. In this setting, every annotator is contributing equally.\nRaw agreement (Tratz & Hovy, 2010): Raw agreement counts the percentage of other people agreeing with them. This is indirectly correlated to majority vote, because all members of the majority class are expected to get higher inter-annotator agreement rate.\nCohen\u2019s Kappa (Landis & Koch, 1977): Cohen\u2019s kappa measures the inter-rater agreement in the form of $\\kappa = (p_o - p_e) / (1 - p_c)$, where $p_o$ is the raw agreement rate and $p_e$ is the agreement by chance. Cohen\u2019s kappa has a correction term for agreeing by chance, but this correction may be overestimated if one label is more prevalent.\nProbabilistic Graph Modeling: There is a body of work relying on probabilistic graph modeling to model different factors within annotation decisions, e.g. difficulty of the task, task latent topics, rater bias, rater confidence, and then predict the true labels accordingly. Zheng et al. (2017)  compared 17 algorithms on truth inference in crowdsourcing and most of them are probabilistic graph models.\n\nMACE (Multi-Annotator Competence Estimation; Hovy et al. 2013) is an early example of using graph modeling to estimate the likelihood of someone acting like a \u201cspammer\u201d by providing random labels. Unsurprisingly in cases when the incentive is misaligned, some annotators may behave as \u201cspammers\u201d to optimize the volume of tasks completed for higher pay. The goal of MACE is to identify spammers. Given a task $i$ and an annotator $j$, $T_i$ is the true label, $A_{ij}$ is the assigned label and $S_{ij}$ models the probability of annotator $j$ spamming. Then the generative process can be represented as belows. The parameter $\\theta_j$ defines the trustworthiness of the annotator $j$ (probability of not spamming) and the parameter $\\xi_j$  defines how an annotator behaves when they are spamming.\n\n\n$$\n\\begin{align}\n& \\text{for } i = 1 \\dots N : \\\\\n& \\quad T_i \\sim \\text{Uniform} \\\\\n& \\quad \\text{for } j = 1 \\dots M : \\\\\n& \\quad \\quad S_{ij} \\sim \\text{Bernoulli}(1 - \\theta_j) \\\\\n& \\quad \\quad \\text{if } S_{ij} = 0 : \\\\\n& \\quad \\quad \\quad A_{ij} = T_i \\\\\n& \\quad \\quad \\text{else } : \\\\\n& \\quad \\quad \\quad A_{ij} \\sim \\text{Multinomial}(\\xi_j) \\\\\n\\end{align}\n$$\n\nThen we can learn $\\theta, \\xi$ to maximize the observed data, in the form of the marginal data likelihood, where $A$ is the matrix of annotations, $S$ is the matrix of competence indicators and $T$ is the matrix of true labels:\n\n$$\nP(A; \\theta, \\xi) = \\sum_{T, S} \\big[ \\prod_{i=1}^N P(T_i) \\cdot \\prod_{j=1}^M P(S_{ij}; \\theta_j) \\cdot P(A_{ij} \\vert S_{ij}, T_i; \\xi_j) \\big]\n$$\n\nEither EM (Expectation\u2013maximization) or VB (Variational Bayes) can be applied to maximize the above marginal likelihood. During EM optimization, at M-step, a fixed value $\\delta$ is added to the fractional counts before normalizing. During VB training, they applied symmetric Beta priors on $\\theta_j$  and symmetric Dirichlet priors on $\\xi_j$. When recovering the correct answers, we can take majority vote weighted by the annotators\u2019 $\\theta$ estimates.\nRater Disagreement & Two Paradigms#\nThe aggregation process described above depends on an assumption that there exists one underlying gold answer and thus we can evaluate annotators\u2019 performance accordingly. However, in many topics, especially in safety, social, or cultural areas, people can disagree and often this disagreement is valid and then it comes down to how much we want to apply a strict rule versus embracing diversity.\nAroyo & Welty (2015) discussed a set of \u201cmyths\u201d in the practice of human annotation collection and found all of them somewhat inaccurate, key findings including:\n\nOften there is more than one correct interpretation for some samples. We need diverse perspectives via e.g. having multiple people to review annotation quality.\nDisagreement is not always bad. We should reduce disagreements caused by errors or poorly designed process but other disagreements can give us rich information.\n\nIf it is caused by a task not well defined, we should enhance the instruction. However, a more detailed guideline does not resolve innate diversity among opinions.\n\n\nExperts may not always be better than lay people, but they would have a big gap in terms of considering what\u2019s important.\nGround truth annotations can change in time, especially those related to timely events or news.\n\nLater, Rottger et al. (2021) formulated the difference into two contrasting paradigms for data annotation for subjective NLP tasks.\n\n\n\n\nDescriptive\nPrescriptive\n\n\n\n\nDefinition\nEncourage annotator subjectivity, trying to model many beliefs.\nDiscourage annotator subjectivity, trying to consistently apply one belief.\n\n\nPros\n- Can help to identify which entries are more subjective;- Embrace diversity\n- More aligned with standard NLP setup. - Easier to do QC by measuring disagreement or doing label aggregation.\n\n\nCons\n- Metrics like rater disagreement cannot be used to measure data quality or annotator performance; - Cannot be used for training models that are optimized for outputting one preset behavior.\n- Expensive and challenging to create high-quality annotation guidelines, which can never be perfect, in practice;- Training annotators to get familiar with guideline in order to apply it properly is also challenging;- Cannot capture an interpretable diversity of beliefs or consistently encode one specific belief.\n\n\n\nThe descriptive paradigm allows us to understand a number of important effects as well as to account for different perspectives. For example, annotator identity (e.g. African American, LGBTQ) is found to be a statistically significant factor in how they would label identify-related content as toxic (Goyal et al. 2022). Topics can be another main driver for diverse opinions. Wang et al. (2023) studied the human evaluation process of safety of an AI conversation system and compared results between labels by Trust & Safety (T&S) professionals and crowdsourcing annotators. They intentionally collected rich metadata associated with crowd annotators like demographic or behavior information. Comparing T&S expert labels and crowd annotations, they found that agreement rates vary across semantic topics and the level of severity:\n\nAgreement rate differs a lot across different topics; ranging from 0.96 on violence/gory to 0.25 on personal topics.\nAgreement rates are higher on \u201cextreme\u201d and \u201cbenign\u201d conversations, given four label options marking \u201cbenign\u201d, \u201cdebatable\u201d, \u201cmoderate\u201d to \u201cextreme\u201d.\n\n\nFig. 4. Correlations between non-expert and expert annotations vary a lot across topics. (Image source: Wang et al. 2023)\nZhang et al. (2023) proposed a taxonomy of rater disagreement to analyze the root causes. Among the listed causes, disagreement due to stochastic errors or inconsistency on the individual level should be avoided. In cases when a rater gives different labels to the same task when asked multiple times, some of those are most likely caused by human errors. Based on this intuition, the disagreement deconvolution method (Gordon et al. 2021) disentangles stable opinions from errors by anchoring each individual\u2019s opinion to their own primary label and thus encouraging intra-rater consistency.\n\nFig. 5. A taxonomy of causes for rater disagreement. (Image source: Zhang et al. 2023)\nDisagreement deconvolution relies on probabilistic graph modeling:\n\nEstimate how often an annotator returns non-primary labels, $p_\\text{flip}$\nPer sample, get an adjusted label distribution $p^*$ of primary labels based on $p_\\text{flip}$\nSample from $p^*$ as a new test set.\nMeasure performance metrics against the new test set.\n\nGiven $C$-category classification, the sampling process of the generative model is stated as follows:\n\n$$\n\\begin{aligned}\ny^*\\mid x &\\sim \\text{Categorial}([C], p^*(y\\mid x)) \\\\\ny_\\text{other}\\mid y^* &\\sim \\text{Categorial}([C]\\setminus\\{y^*\\}, \\frac{1}{C-1}) \\\\\nz_\\text{flip} \\mid x &\\sim \\text{Bernoulli}(p_\\text{flip}(x)) \\\\\ny\\mid y^*, y_\\text{other}, z_\\text{flip} &= y^* (1 - z_\\text{flip}) + y_\\text{other} z_\\text{flip}\n\\end{aligned}\n$$\n\nGiven the true $p(y\\mid x)$ and $p_\\text{flip}$ that can be estimated from the data, we would update the label distribution of primary labels:\n\n$$\np^*(y\\mid x) = \\frac{p(y\\mid x) - \\frac{p_\\text{flip}(x)}{C-1}}{1 - \\frac{C \\cdot p_\\text{flip}(x)}{C - 1}}\n$$\n\nA new test set sampled from $p^*(y \\mid x)$ represents the primary labels with individual inconsistency noise removed. It can be used for evaluation, as a noise-free test set.\nTo capture systematic disagreement among annotators when learning to predict labels, Davani et al. (2021) experimented with a multi-annotator model where predicting each annotator\u2019s labels is treated as one sub-task. Say, the classification task is defined on an annotated dataset $D=(X, A, Y)$, where $X$ is the text instances, $A$ is the set of annotators and $Y$ is the annotation matrix, $y_{ij} \\in Y$ represents a binary label assigned by $a_j \\in A$ to the sample $x_i \\in X$. The majority vote for $x_i$ is denoted as $\\bar{y}_{i,}$. The experiment is to train a classification head on top of a pre-trained BERT model and compares 4 setups:\n\nBaseline: Directly predict the majority vote $\\bar{y}_i$, not using the full annotation matrix $Y$.\nEnsemble: Train one model per annotator separately to predict $y_{ij}$ and then the results are aggregated by majority vote.\nMulti-label: Learn to predict $\\vert A \\vert$ labels to represent all annotators\u2019 labels per sample $\\langle y_{i1}, \\dots, y_{i\\vert A \\vert} \\rangle$, with a shared MLP layer and then outputs are aggregated.\nMulti-task: Similar to multi-label, but each annotator\u2019s prediction head is learned from a separated MLP layer, such that we allocate extra compute to learn the difference among annotators.\n\nExperiment results on the GHC (Gab Hate Corpus) dataset showed that the multi-task model achieves the best F1 score and also can naturally provide prediction uncertainty estimation, correlated with annotation disagreement.\n\nFig. 6. Illustration of different architectures for modeling multiple annotators' labels. (Image source: Davani et al. 2021)\nJury Learning (Gordon et al. 2022) mimics the jury process by modeling the different annotators\u2019 labeling behavior conditioned on their characteristics. Starting with a dataset with labels and demographic characteristics of each labeler, we train a model to learn to predict labels made by every individual annotator, each as a potential juror. At decision time, practitioners can specify the composition of a group of jurors to determine a sampling strategy. The final decision is made by aggregating labels from jurors from multiple trials.\n\nFig. 7. Illustration of how jury learning works. (Image source: Gordon et al. 2022)\nThe jury learning model is a DCN (Deep & Cross network) , commonly for recommendation use case,  that is jointly trained to learn comment embedding, annotator embedding and group (annotator\u2019s characteristics) embedding. The text content is processed by a pre-trained BERT, which is also jointly fine-tuned but for a shorter period to avoid overfitting.\n\nFig. 8. DCN model architecture for jury learning. (Image source: Gordon et al. 2022)\nTheir experiment runs on the toxicity diversity dataset and compares jury learning with a baseline model which is a fine-tuned BERT to predict individual annotator\u2019s label without using metadata. Performance is measured in MAE (mean absolute error). Jury learning consistently outperforms the annotator-agnostic baseline on the full test set as well as each group segment.", "type": "Document"}}